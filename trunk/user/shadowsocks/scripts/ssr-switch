#!/bin/sh
#
# Copyright (C) 2017 openwrt-ssr
# Copyright (C) 2017 yushi studio <ywb94@qq.com>
# Copyright (C) 2019 chongshengB
#
# This is free software, licensed under the GNU General Public License v3.
# See /LICENSE for more information.
#

NAME=shadowsocksr
cycle_time=10
switch_time=3
normal_flag=0
server_locate=0
NAME=shadowsocksr
ENABLE_SERVER=nil
CONFIG_SWTICH_FILE=/tmp/${NAME}_t.json
server_count=0
current_ret=""
[ -n "$2" ] && cycle_time=$2
[ -n "$3" ] && switch_time=$3

DEFAULT_SERVER=$(nvram get global_server)
CURRENT_SERVER=$DEFAULT_SERVER
BACKUP_SERVER=$(nvram get backup_server)

log() {
	logger -t "$NAME" "$@"
	echo "$(date "+%Y-%m-%d %H:%M:%S") $@" >> "/tmp/ssrplus.log"
}

check_proxy() {
  result=0
  for i in $(seq 1 3)
  do
    /usr/bin/ss-check www.google.com 80 $switch_time 1
    check=$?
    if [ "$check" == "0" ]; then
      # log "Check Google Proxy Success, count=$i"
      result=0
      break
    else
    	/usr/bin/ss-check www.youtube.com 80 $switch_time 1
    check=$?
    if [ "$check" == "0" ]; then
      # log "Check Google Proxy Success, count=$i"
      result=0
      break
    else
      # log "Check Google Proxy Fail, count=$i"
      /usr/bin/ss-check www.baidu.com 80 $switch_time 1
      check=$?
      if [ "$check" == "0" ]; then
        result=1
      else
        result=2
      fi
    fi
    fi
    sleep 20;
  done
  current_ret=$result;
}

a_start() {
while [ "1" = "1" ]  #死循环
do
	sleep $cycle_time
	check_proxy
    current_ret = $?
if [ "$current_ret" = "1" ] ;then
#当前代理错误，判断有无可用的服务器
if [ $(nvram get check_mode) = "1" ];then
	log "备用服务器也故障了,请检测主备服务器是否正常！"
	nvram set ss_enable=0
	nvram set check_mode=0
	/usr/bin/shadowsocks.sh stop &
	exit 0
fi
log "检测到主服务器故障，切换到备用服务器。"
nvram set check_mode=1
/usr/bin/shadowsocks.sh reserver &
fi
done
}

case $1 in
start)
	a_start
	;;
stop)
	a_close
	;;
esac
